target_size: {
  width:224
  height:224
}
#short_side_size: 224

#super_debug_mode: true
batch_size: 64
epochs: 1000

max_people_per_img: 0

model: {
  # block 1
  layers {convolutional { filters: 64
                          kernel_size {width: 3 height: 3 }}
          name: "conv"
          scope: "transfer/vgg19/conv1/1"}
  layers {convolutional { filters: 64
                          kernel_size {width: 3 height: 3 }}
          name: "conv"
          scope: "transfer/vgg19/conv1/2"}

  layers {pool {size {width: 2 height: 2}}
          scope: "transfer/vgg19/conv1/pool"}

  # block 2
  layers {convolutional { filters: 128
                          kernel_size {width: 3 height: 3 }}
          name: "conv"
          scope: "transfer/vgg19/conv2/1"}
  layers {convolutional { filters: 128
                          kernel_size {width: 3 height: 3 }}
          name: "conv"
          scope: "transfer/vgg19/conv2/2"}
  layers {pool {size {width: 2 height: 2}}
          scope: "transfer/vgg19/conv2/pool"}

  # block 3
  layers {convolutional { filters: 256
                          kernel_size {width: 3 height: 3 }}
          name: "conv"
          scope: "transfer/vgg19/conv3/1"}
  layers {convolutional { filters: 256
                          kernel_size {width: 3 height: 3 }}
          name: "conv"
          scope: "transfer/vgg19/conv3/2"}
  layers {convolutional { filters: 256
                          kernel_size {width: 3 height: 3 }}
          name: "conv"
          scope: "transfer/vgg19/conv3/3"}
  layers {convolutional { filters: 256
                          kernel_size {width: 3 height: 3 }}
          name: "conv"
          scope: "transfer/vgg19/conv3/4"}
  layers {pool {size {width: 2 height: 2}}
          scope: "transfer/vgg19/conv3/pool"}

  # block 4
  layers {convolutional { filters: 512
                          kernel_size {width: 3 height: 3 }}
          name: "conv"
          scope: "transfer/vgg19/conv4/1"}
  layers {convolutional { filters: 512
                          kernel_size {width: 3 height: 3 }}
          name: "conv"
          scope: "transfer/vgg19/conv4/2"}
  layers {convolutional { filters: 512
                          kernel_size {width: 3 height: 3 }}
          name: "conv"
          scope: "transfer/vgg19/conv4/3"}
  layers {convolutional { filters: 512
                          kernel_size {width: 3 height: 3 }}
          name: "conv"
          scope: "transfer/vgg19/conv4/4"}
  layers {pool {size {width: 2 height: 2}}
          scope: "transfer/vgg19/conv4/pool"}

  # block 5
  layers {convolutional { filters: 512
                          kernel_size {width: 3 height: 3 }}
          name: "conv"
          scope: "transfer/vgg19/conv5/1"}
  layers {convolutional { filters: 512
                          kernel_size {width: 3 height: 3 }}
          name: "conv"
          scope: "transfer/vgg19/conv5/2"}
  layers {convolutional { filters: 512
                          kernel_size {width: 3 height: 3 }}
          name: "conv"
          scope: "transfer/vgg19/conv5/3"}
  layers {convolutional { filters: 512
                          kernel_size {width: 3 height: 3 }}
          name: "conv"
          scope: "transfer/vgg19/conv5/4"}
  layers {pool {size {width: 2 height: 2}}
          scope: "transfer/vgg19/conv5/pool"}

  layers { flatten {}
           scope: "trainable_vars"}

  layers { dense { units: 2048 activation: "relu" },
           scope: "trainable_vars",
           name: "dense"}
  layers { dense { units: 2048 activation: "relu" },
           scope: "trainable_vars"
           name: "dense_1"}
  layers { dropout {}
           scope: "trainable_vars"}
  layers { dense { units: 10 activation: "softmax" }
           name: "output"
           scope: "trainable_vars"}

}

# This system config is specific for a phase 18 node
system {
  # gpus: 2
  workers:4
}
