# Input data
color_mode: RGB
# All iamges are rescaled to this
target_size: {
  width:256
  height:256
}
class_mode: "binary"

# This system config is specific for a phase 18 node
system {
  gpus: 2
  workers:-1
}

# Note, there are a number of default parameters used for image preproc

# Training Param
batch_size: 64
epochs:50
# Note: our image generator creates an infinite number of augmented versions
# of our training data this # steps tells us how many to generate before
# reconfiguring our learning rate. it also refreshes how we see our data.
steps_per_epoch:1000
validation_steps:10

# Model
model: {

  # convolutional layer
  layers: {
    convolutional: {
      filters: 64
      kernel_size: {
        width: 3 height : 3
      }
      pool_size: {
        width: 2 height: 2
      }
    }
  }

  # convolutional layer
  layers: {
    convolutional: {
      filters: 64
      kernel_size: {
        width: 3 height : 3
      }
      pool_size: {
        width: 2 height: 2
      }
    }
  }

  # convolutional layer
  layers: {
    convolutional: {
      filters: 64
      kernel_size: {
        width: 3 height : 3
      }
      pool_size: {
        width: 2 height: 2
      }
    }
  }

  # convolutional layer
  layers: {
    convolutional: {
      filters: 64
      kernel_size: {
        width: 3 height : 3
      }
      pool_size: {
        width: 2 height: 2
      }
    }
  }

  # convolutional layer
  layers: {
    convolutional: {
      filters: 64
      kernel_size: {
        width: 3 height : 3
      }
      pool_size: {
        width: 2 height: 2
      }
    }
  }


  # Compress
  layers: {
    flatten: {}
  }

  # Dense Hidden Layer
  layers: {
    dense: {
      units: 32
    }
  }

  # Dense Hidden Layer
  layers: {
    dense: {
      units: 16
    }
  }

  # Dense Hidden Layer
  layers: {
    dense: {
      units: 8
    }
  }

  # Boolean Output Layer
  layers: {
    dense: {
      units: 1
      activation: "sigmoid"
      name: "output"
    }
  }

  loss: "mse"
  optimizer: "sgd"
}
